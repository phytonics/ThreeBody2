{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tris Welcome to the Tris Documentation! Tris ( Tri nary S creener) is an open-source tool that offers a specialized method to determine \"observed-minus-computed\" (OC) diagrams from astronomical flux time series data (lightcurves) obtained from NASA's Kepler and K2 missions. Here is a brief outline of the algorithm: Diagram of Algorithm. In this documentation, we detail various methods to use our algorithm.","title":"Home"},{"location":"#tris","text":"Welcome to the Tris Documentation! Tris ( Tri nary S creener) is an open-source tool that offers a specialized method to determine \"observed-minus-computed\" (OC) diagrams from astronomical flux time series data (lightcurves) obtained from NASA's Kepler and K2 missions. Here is a brief outline of the algorithm: Diagram of Algorithm. In this documentation, we detail various methods to use our algorithm.","title":"Tris"},{"location":"library/installation/","text":"Installation Installing from PyPI Yes, we have published tris on PyPI! To install tris and all its dependencies, the easiest method would be to use pip to query PyPI. This should, by default, be present in your Python installation. To, install run the following command in a terminal or Command Prompt / Powershell: $ pip install tris Depending on the OS, you might need to use pip3 instead. If the command is not found, you can choose to use the following command too: $ python -m pip install tris Here too, python or pip might be replaced with py or python3 and pip3 depending on the OS and installation configuration. If you have any issues with this, it is always helpful to consult Stack Overflow . Installing from Source To install from source, you need to get the following: Git Git is needed to install this repository. This is not completely necessary as you can also install the zip file for this repository and store it on a local drive manually. To install Git, follow this guide . After you have successfully installed Git, you can run the following command in a terminal / Command Prompt etc: $ git clone https://github.com/three-body-analysis/codebase.git This stores a copy in the folder codebase . You can then navigate into it using cd codebase . Poetry This project can be used easily via a tool know as Poetry. This allows you to easily reflect edits made in the original source code! To install poetry , you can also install it using pip by typing in the command as follows: $ pip install poetry Again, if you have any issues with pip , check out here . After this, you can use the following command to install this library: $ poetry install","title":"Installation"},{"location":"library/installation/#installation","text":"","title":"Installation"},{"location":"library/installation/#installing-from-pypi","text":"Yes, we have published tris on PyPI! To install tris and all its dependencies, the easiest method would be to use pip to query PyPI. This should, by default, be present in your Python installation. To, install run the following command in a terminal or Command Prompt / Powershell: $ pip install tris Depending on the OS, you might need to use pip3 instead. If the command is not found, you can choose to use the following command too: $ python -m pip install tris Here too, python or pip might be replaced with py or python3 and pip3 depending on the OS and installation configuration. If you have any issues with this, it is always helpful to consult Stack Overflow .","title":"Installing from PyPI"},{"location":"library/installation/#installing-from-source","text":"To install from source, you need to get the following:","title":"Installing from Source"},{"location":"library/installation/#git","text":"Git is needed to install this repository. This is not completely necessary as you can also install the zip file for this repository and store it on a local drive manually. To install Git, follow this guide . After you have successfully installed Git, you can run the following command in a terminal / Command Prompt etc: $ git clone https://github.com/three-body-analysis/codebase.git This stores a copy in the folder codebase . You can then navigate into it using cd codebase .","title":"Git"},{"location":"library/installation/#poetry","text":"This project can be used easily via a tool know as Poetry. This allows you to easily reflect edits made in the original source code! To install poetry , you can also install it using pip by typing in the command as follows: $ pip install poetry Again, if you have any issues with pip , check out here . After this, you can use the following command to install this library: $ poetry install","title":"Poetry"},{"location":"library/io/","text":"Input/Output Note This library currently supports pandas.DataFrame objects, and fits , excel , csv and json file types. Further developments would involve adding support for light curves from lightkurve . Stay tuned for updates! Tris offers a very simple wrapper to read your files into proper pandas.DataFrame objects that can be fed into subsequent algorithms. Literally, it's as simple as just: >>> tris . read ( \"data/combined/kplr001026032.fits\" ) time flux 0 131.512714 12319.001953 1 131.533148 12321.861328 2 131.553583 12317.918945 3 131.574017 12307.453125 4 131.594452 12308.416992 ... ... ... 1619 164.902637 12541.321289 1620 164.923071 12549.753906 1621 164.943505 12551.208008 1622 164.963939 12547.056641 1623 164.984374 12547.208008 [ 1624 rows x 2 columns ] The data reading algorithm for Tris is quite simple, and there are specific functions available for different formats. The read_csv , read_json , read_fits and read_excel functions help us read the","title":"Input/Output"},{"location":"library/io/#inputoutput","text":"Note This library currently supports pandas.DataFrame objects, and fits , excel , csv and json file types. Further developments would involve adding support for light curves from lightkurve . Stay tuned for updates! Tris offers a very simple wrapper to read your files into proper pandas.DataFrame objects that can be fed into subsequent algorithms. Literally, it's as simple as just: >>> tris . read ( \"data/combined/kplr001026032.fits\" ) time flux 0 131.512714 12319.001953 1 131.533148 12321.861328 2 131.553583 12317.918945 3 131.574017 12307.453125 4 131.594452 12308.416992 ... ... ... 1619 164.902637 12541.321289 1620 164.923071 12549.753906 1621 164.943505 12551.208008 1622 164.963939 12547.056641 1623 164.984374 12547.208008 [ 1624 rows x 2 columns ] The data reading algorithm for Tris is quite simple, and there are specific functions available for different formats. The read_csv , read_json , read_fits and read_excel functions help us read the","title":"Input/Output"}]}